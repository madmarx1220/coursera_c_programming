Grading at Mon Feb  1 06:26:52 UTC 2021
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==672== Memcheck, a memory error detector
==672== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==672== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==672== Command: ./test-eval inp.1.txt
==672== Parent PID: 671
==672== 
==672== Use of uninitialised value of size 8
==672==    at 0x401A78: build_hand_from_match (eval.c:221)
==672==    by 0x4024EE: evaluate_hand (eval.c:405)
==672==    by 0x4028D6: describe_hand (test-eval.c:68)
==672==    by 0x402B01: main (test-eval.c:116)
==672== 
==672== Conditional jump or move depends on uninitialised value(s)
==672==    at 0x401A7C: build_hand_from_match (eval.c:221)
==672==    by 0x4024EE: evaluate_hand (eval.c:405)
==672==    by 0x4028D6: describe_hand (test-eval.c:68)
==672==    by 0x402B01: main (test-eval.c:116)
==672== 
==672== Use of uninitialised value of size 8
==672==    at 0x401A78: build_hand_from_match (eval.c:221)
==672==    by 0x4024EE: evaluate_hand (eval.c:405)
==672==    by 0x4028D6: describe_hand (test-eval.c:68)
==672==    by 0x402B21: main (test-eval.c:119)
==672== 
==672== Conditional jump or move depends on uninitialised value(s)
==672==    at 0x401A7C: build_hand_from_match (eval.c:221)
==672==    by 0x4024EE: evaluate_hand (eval.c:405)
==672==    by 0x4028D6: describe_hand (test-eval.c:68)
==672==    by 0x402B21: main (test-eval.c:119)
==672== 
==672== Use of uninitialised value of size 8
==672==    at 0x401A78: build_hand_from_match (eval.c:221)
==672==    by 0x4024EE: evaluate_hand (eval.c:405)
==672==    by 0x401B9C: compare_hands (eval.c:241)
==672==    by 0x402B76: main (test-eval.c:124)
==672== 
==672== Conditional jump or move depends on uninitialised value(s)
==672==    at 0x401A7C: build_hand_from_match (eval.c:221)
==672==    by 0x4024EE: evaluate_hand (eval.c:405)
==672==    by 0x401B9C: compare_hands (eval.c:241)
==672==    by 0x402B76: main (test-eval.c:124)
==672== 
==672== Use of uninitialised value of size 8
==672==    at 0x401A78: build_hand_from_match (eval.c:221)
==672==    by 0x4024EE: evaluate_hand (eval.c:405)
==672==    by 0x401BF7: compare_hands (eval.c:242)
==672==    by 0x402B76: main (test-eval.c:124)
==672== 
==672== Conditional jump or move depends on uninitialised value(s)
==672==    at 0x401A7C: build_hand_from_match (eval.c:221)
==672==    by 0x4024EE: evaluate_hand (eval.c:405)
==672==    by 0x401BF7: compare_hands (eval.c:242)
==672==    by 0x402B76: main (test-eval.c:124)
==672== 
==672== 
==672== HEAP SUMMARY:
==672==     in use at exit: 0 bytes in 0 blocks
==672==   total heap usage: 278 allocs, 278 frees, 13,728 bytes allocated
==672== 
==672== All heap blocks were freed -- no leaks are possible
==672== 
==672== For counts of detected and suppressed errors, rerun with: -v
==672== Use --track-origins=yes to see where uninitialised values come from
==672== ERROR SUMMARY: 40 errors from 8 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 4: Trying hands with 3 of a kind
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 5: Trying hands with straights
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 6: Trying hands with flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 7: Trying hands with full houses
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 8: Trying hands with 4 of a kind
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 9: Trying hands with straight flushes
 Checking the output 
Line_64_did_not_match
Line_67_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 							Kh Qh Jh 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 9s 8s 						As Ks Qs Js 0s 9s 8s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 8h 7h 						Kh Qh Jh 0h 9h 8h 7h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Ks Qs Js 0s 						Ac As Kc Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Ad Kh Qh Jh Js 0h 9h 						Ad Kh Qh Jh Js 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight at index 0						 - Straight at index 0
 - Straight flush at index 1				      |	 - Straight at index 1
 - The most of a kind is 2 of a kind (at index 3 / value J)	 - The most of a kind is 2 of a kind (at index 3 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Kc 5h 4h 3h 2h 						Ah Kc 5h 4h 3h 2h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5h 4h 3h 2h Ah 			 - 5 cards used for hand: 5h 4h 3h 2h Ah 
Hand 2:								Hand 2:
--------							--------
Ac 6c 5c 4c 3c 2c 						Ac 6c 5c 4c 3c 2c 
 - Flush in suit c						 - Flush in suit c
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5c 4c 3c 2c Ac 			 - 5 cards used for hand: 5c 4c 3c 2c Ac 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
As 5s 4s 3s 2s 							As 5s 4s 3s 2s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5s 4s 3s 2s As 			 - 5 cards used for hand: 5s 4s 3s 2s As 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==774== Memcheck, a memory error detector
==774== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==774== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==774== Command: ./test-eval inp.10.txt
==774== Parent PID: 773
==774== 
==774== Use of uninitialised value of size 8
==774==    at 0x401A78: build_hand_from_match (eval.c:221)
==774==    by 0x4024EE: evaluate_hand (eval.c:405)
==774==    by 0x4028D6: describe_hand (test-eval.c:68)
==774==    by 0x402B21: main (test-eval.c:119)
==774== 
==774== Conditional jump or move depends on uninitialised value(s)
==774==    at 0x401A7C: build_hand_from_match (eval.c:221)
==774==    by 0x4024EE: evaluate_hand (eval.c:405)
==774==    by 0x4028D6: describe_hand (test-eval.c:68)
==774==    by 0x402B21: main (test-eval.c:119)
==774== 
==774== Use of uninitialised value of size 8
==774==    at 0x401A78: build_hand_from_match (eval.c:221)
==774==    by 0x4024EE: evaluate_hand (eval.c:405)
==774==    by 0x401BF7: compare_hands (eval.c:242)
==774==    by 0x402B76: main (test-eval.c:124)
==774== 
==774== Conditional jump or move depends on uninitialised value(s)
==774==    at 0x401A7C: build_hand_from_match (eval.c:221)
==774==    by 0x4024EE: evaluate_hand (eval.c:405)
==774==    by 0x401BF7: compare_hands (eval.c:242)
==774==    by 0x402B76: main (test-eval.c:124)
==774== 
==774== Use of uninitialised value of size 8
==774==    at 0x401A78: build_hand_from_match (eval.c:221)
==774==    by 0x4024EE: evaluate_hand (eval.c:405)
==774==    by 0x4028D6: describe_hand (test-eval.c:68)
==774==    by 0x402B01: main (test-eval.c:116)
==774== 
==774== Conditional jump or move depends on uninitialised value(s)
==774==    at 0x401A7C: build_hand_from_match (eval.c:221)
==774==    by 0x4024EE: evaluate_hand (eval.c:405)
==774==    by 0x4028D6: describe_hand (test-eval.c:68)
==774==    by 0x402B01: main (test-eval.c:116)
==774== 
==774== Use of uninitialised value of size 8
==774==    at 0x401A78: build_hand_from_match (eval.c:221)
==774==    by 0x4024EE: evaluate_hand (eval.c:405)
==774==    by 0x401B9C: compare_hands (eval.c:241)
==774==    by 0x402B76: main (test-eval.c:124)
==774== 
==774== Conditional jump or move depends on uninitialised value(s)
==774==    at 0x401A7C: build_hand_from_match (eval.c:221)
==774==    by 0x4024EE: evaluate_hand (eval.c:405)
==774==    by 0x401B9C: compare_hands (eval.c:241)
==774==    by 0x402B76: main (test-eval.c:124)
==774== 
==774== 
==774== HEAP SUMMARY:
==774==     in use at exit: 0 bytes in 0 blocks
==774==   total heap usage: 3,988 allocs, 3,988 frees, 80,704 bytes allocated
==774== 
==774== All heap blocks were freed -- no leaks are possible
==774== 
==774== For counts of detected and suppressed errors, rerun with: -v
==774== Use --track-origins=yes to see where uninitialised values come from
==774== ERROR SUMMARY: 64 errors from 8 contexts (suppressed: 0 from 0)

Overall Grade: C
