Grading at Mon Feb  1 06:38:12 UTC 2021
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==918== Memcheck, a memory error detector
==918== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==918== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==918== Command: ./test-eval inp.1.txt
==918== Parent PID: 917
==918== 
==918== Use of uninitialised value of size 8
==918==    at 0x401A8F: build_hand_from_match (eval.c:221)
==918==    by 0x402505: evaluate_hand (eval.c:405)
==918==    by 0x4028ED: describe_hand (test-eval.c:68)
==918==    by 0x402B18: main (test-eval.c:116)
==918== 
==918== Conditional jump or move depends on uninitialised value(s)
==918==    at 0x401A93: build_hand_from_match (eval.c:221)
==918==    by 0x402505: evaluate_hand (eval.c:405)
==918==    by 0x4028ED: describe_hand (test-eval.c:68)
==918==    by 0x402B18: main (test-eval.c:116)
==918== 
==918== Use of uninitialised value of size 8
==918==    at 0x401A8F: build_hand_from_match (eval.c:221)
==918==    by 0x402505: evaluate_hand (eval.c:405)
==918==    by 0x4028ED: describe_hand (test-eval.c:68)
==918==    by 0x402B38: main (test-eval.c:119)
==918== 
==918== Conditional jump or move depends on uninitialised value(s)
==918==    at 0x401A93: build_hand_from_match (eval.c:221)
==918==    by 0x402505: evaluate_hand (eval.c:405)
==918==    by 0x4028ED: describe_hand (test-eval.c:68)
==918==    by 0x402B38: main (test-eval.c:119)
==918== 
==918== Use of uninitialised value of size 8
==918==    at 0x401A8F: build_hand_from_match (eval.c:221)
==918==    by 0x402505: evaluate_hand (eval.c:405)
==918==    by 0x401BB3: compare_hands (eval.c:241)
==918==    by 0x402B8D: main (test-eval.c:124)
==918== 
==918== Conditional jump or move depends on uninitialised value(s)
==918==    at 0x401A93: build_hand_from_match (eval.c:221)
==918==    by 0x402505: evaluate_hand (eval.c:405)
==918==    by 0x401BB3: compare_hands (eval.c:241)
==918==    by 0x402B8D: main (test-eval.c:124)
==918== 
==918== Use of uninitialised value of size 8
==918==    at 0x401A8F: build_hand_from_match (eval.c:221)
==918==    by 0x402505: evaluate_hand (eval.c:405)
==918==    by 0x401C0E: compare_hands (eval.c:242)
==918==    by 0x402B8D: main (test-eval.c:124)
==918== 
==918== Conditional jump or move depends on uninitialised value(s)
==918==    at 0x401A93: build_hand_from_match (eval.c:221)
==918==    by 0x402505: evaluate_hand (eval.c:405)
==918==    by 0x401C0E: compare_hands (eval.c:242)
==918==    by 0x402B8D: main (test-eval.c:124)
==918== 
==918== 
==918== HEAP SUMMARY:
==918==     in use at exit: 0 bytes in 0 blocks
==918==   total heap usage: 278 allocs, 278 frees, 13,728 bytes allocated
==918== 
==918== All heap blocks were freed -- no leaks are possible
==918== 
==918== For counts of detected and suppressed errors, rerun with: -v
==918== Use --track-origins=yes to see where uninitialised values come from
==918== ERROR SUMMARY: 40 errors from 8 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 4: Trying hands with 3 of a kind
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 5: Trying hands with straights
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 6: Trying hands with flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 7: Trying hands with full houses
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 8: Trying hands with 4 of a kind
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 9: Trying hands with straight flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==1019== Memcheck, a memory error detector
==1019== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1019== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1019== Command: ./test-eval inp.10.txt
==1019== Parent PID: 1018
==1019== 
==1019== Use of uninitialised value of size 8
==1019==    at 0x401A8F: build_hand_from_match (eval.c:221)
==1019==    by 0x402505: evaluate_hand (eval.c:405)
==1019==    by 0x4028ED: describe_hand (test-eval.c:68)
==1019==    by 0x402B38: main (test-eval.c:119)
==1019== 
==1019== Conditional jump or move depends on uninitialised value(s)
==1019==    at 0x401A93: build_hand_from_match (eval.c:221)
==1019==    by 0x402505: evaluate_hand (eval.c:405)
==1019==    by 0x4028ED: describe_hand (test-eval.c:68)
==1019==    by 0x402B38: main (test-eval.c:119)
==1019== 
==1019== Use of uninitialised value of size 8
==1019==    at 0x401A8F: build_hand_from_match (eval.c:221)
==1019==    by 0x402505: evaluate_hand (eval.c:405)
==1019==    by 0x401C0E: compare_hands (eval.c:242)
==1019==    by 0x402B8D: main (test-eval.c:124)
==1019== 
==1019== Conditional jump or move depends on uninitialised value(s)
==1019==    at 0x401A93: build_hand_from_match (eval.c:221)
==1019==    by 0x402505: evaluate_hand (eval.c:405)
==1019==    by 0x401C0E: compare_hands (eval.c:242)
==1019==    by 0x402B8D: main (test-eval.c:124)
==1019== 
==1019== Use of uninitialised value of size 8
==1019==    at 0x401A8F: build_hand_from_match (eval.c:221)
==1019==    by 0x402505: evaluate_hand (eval.c:405)
==1019==    by 0x4028ED: describe_hand (test-eval.c:68)
==1019==    by 0x402B18: main (test-eval.c:116)
==1019== 
==1019== Conditional jump or move depends on uninitialised value(s)
==1019==    at 0x401A93: build_hand_from_match (eval.c:221)
==1019==    by 0x402505: evaluate_hand (eval.c:405)
==1019==    by 0x4028ED: describe_hand (test-eval.c:68)
==1019==    by 0x402B18: main (test-eval.c:116)
==1019== 
==1019== Use of uninitialised value of size 8
==1019==    at 0x401A8F: build_hand_from_match (eval.c:221)
==1019==    by 0x402505: evaluate_hand (eval.c:405)
==1019==    by 0x401BB3: compare_hands (eval.c:241)
==1019==    by 0x402B8D: main (test-eval.c:124)
==1019== 
==1019== Conditional jump or move depends on uninitialised value(s)
==1019==    at 0x401A93: build_hand_from_match (eval.c:221)
==1019==    by 0x402505: evaluate_hand (eval.c:405)
==1019==    by 0x401BB3: compare_hands (eval.c:241)
==1019==    by 0x402B8D: main (test-eval.c:124)
==1019== 
==1019== 
==1019== HEAP SUMMARY:
==1019==     in use at exit: 0 bytes in 0 blocks
==1019==   total heap usage: 3,988 allocs, 3,988 frees, 80,704 bytes allocated
==1019== 
==1019== All heap blocks were freed -- no leaks are possible
==1019== 
==1019== For counts of detected and suppressed errors, rerun with: -v
==1019== Use --track-origins=yes to see where uninitialised values come from
==1019== ERROR SUMMARY: 64 errors from 8 contexts (suppressed: 0 from 0)

Overall Grade: C
