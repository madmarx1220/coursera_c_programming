Grading at Mon Feb  1 05:33:48 UTC 2021
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==423== Memcheck, a memory error detector
==423== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==423== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==423== Command: ./test-eval inp.1.txt
==423== Parent PID: 422
==423== 
==423== Use of uninitialised value of size 8
==423==    at 0x401A3A: build_hand_from_match (eval.c:217)
==423==    by 0x4024B0: evaluate_hand (eval.c:401)
==423==    by 0x402898: describe_hand (test-eval.c:68)
==423==    by 0x402AC3: main (test-eval.c:116)
==423== 
==423== Conditional jump or move depends on uninitialised value(s)
==423==    at 0x401A3E: build_hand_from_match (eval.c:217)
==423==    by 0x4024B0: evaluate_hand (eval.c:401)
==423==    by 0x402898: describe_hand (test-eval.c:68)
==423==    by 0x402AC3: main (test-eval.c:116)
==423== 
==423== Use of uninitialised value of size 8
==423==    at 0x401A3A: build_hand_from_match (eval.c:217)
==423==    by 0x4024B0: evaluate_hand (eval.c:401)
==423==    by 0x402898: describe_hand (test-eval.c:68)
==423==    by 0x402AE3: main (test-eval.c:119)
==423== 
==423== Conditional jump or move depends on uninitialised value(s)
==423==    at 0x401A3E: build_hand_from_match (eval.c:217)
==423==    by 0x4024B0: evaluate_hand (eval.c:401)
==423==    by 0x402898: describe_hand (test-eval.c:68)
==423==    by 0x402AE3: main (test-eval.c:119)
==423== 
==423== Use of uninitialised value of size 8
==423==    at 0x401A3A: build_hand_from_match (eval.c:217)
==423==    by 0x4024B0: evaluate_hand (eval.c:401)
==423==    by 0x401B5E: compare_hands (eval.c:237)
==423==    by 0x402B38: main (test-eval.c:124)
==423== 
==423== Conditional jump or move depends on uninitialised value(s)
==423==    at 0x401A3E: build_hand_from_match (eval.c:217)
==423==    by 0x4024B0: evaluate_hand (eval.c:401)
==423==    by 0x401B5E: compare_hands (eval.c:237)
==423==    by 0x402B38: main (test-eval.c:124)
==423== 
==423== Use of uninitialised value of size 8
==423==    at 0x401A3A: build_hand_from_match (eval.c:217)
==423==    by 0x4024B0: evaluate_hand (eval.c:401)
==423==    by 0x401BB9: compare_hands (eval.c:238)
==423==    by 0x402B38: main (test-eval.c:124)
==423== 
==423== Conditional jump or move depends on uninitialised value(s)
==423==    at 0x401A3E: build_hand_from_match (eval.c:217)
==423==    by 0x4024B0: evaluate_hand (eval.c:401)
==423==    by 0x401BB9: compare_hands (eval.c:238)
==423==    by 0x402B38: main (test-eval.c:124)
==423== 
==423== 
==423== HEAP SUMMARY:
==423==     in use at exit: 0 bytes in 0 blocks
==423==   total heap usage: 278 allocs, 278 frees, 13,728 bytes allocated
==423== 
==423== All heap blocks were freed -- no leaks are possible
==423== 
==423== For counts of detected and suppressed errors, rerun with: -v
==423== Use --track-origins=yes to see where uninitialised values come from
==423== ERROR SUMMARY: 40 errors from 8 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 4: Trying hands with 3 of a kind
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 5: Trying hands with straights
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 6: Trying hands with flushes
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 7: Trying hands with full houses
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 8: Trying hands with 4 of a kind
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 9: Trying hands with straight flushes
 Checking the output 
Line_54_did_not_match
Line_57_did_not_match
Line_71_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 							Kh Qh Jh 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 9s 8s 						As Ks Qs Js 0s 9s 8s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 8h 7h 						Kh Qh Jh 0h 9h 8h 7h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Ks Qs Js 0s 						Ac As Kc Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - Straight flush at index 1				      |	 - Straight at index 1
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Ad Kh Qh Jh Js 0h 9h 						Ad Kh Qh Jh Js 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight at index 0						 - Straight at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - The most of a kind is 2 of a kind (at index 3 / value J)	 - The most of a kind is 2 of a kind (at index 3 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!						      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Kc 5h 4h 3h 2h 						Ah Kc 5h 4h 3h 2h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5h 4h 3h 2h Ah 			 - 5 cards used for hand: 5h 4h 3h 2h Ah 
Hand 2:								Hand 2:
--------							--------
Ac 6c 5c 4c 3c 2c 						Ac 6c 5c 4c 3c 2c 
 - Flush in suit c						 - Flush in suit c
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5c 4c 3c 2c Ac 			 - 5 cards used for hand: 5c 4c 3c 2c Ac 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
As 5s 4s 3s 2s 							As 5s 4s 3s 2s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5s 4s 3s 2s As 			 - 5 cards used for hand: 5s 4s 3s 2s As 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==525== Memcheck, a memory error detector
==525== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==525== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==525== Command: ./test-eval inp.10.txt
==525== Parent PID: 524
==525== 
==525== Use of uninitialised value of size 8
==525==    at 0x401A3A: build_hand_from_match (eval.c:217)
==525==    by 0x4024B0: evaluate_hand (eval.c:401)
==525==    by 0x402898: describe_hand (test-eval.c:68)
==525==    by 0x402AE3: main (test-eval.c:119)
==525== 
==525== Conditional jump or move depends on uninitialised value(s)
==525==    at 0x401A3E: build_hand_from_match (eval.c:217)
==525==    by 0x4024B0: evaluate_hand (eval.c:401)
==525==    by 0x402898: describe_hand (test-eval.c:68)
==525==    by 0x402AE3: main (test-eval.c:119)
==525== 
==525== Use of uninitialised value of size 8
==525==    at 0x401A3A: build_hand_from_match (eval.c:217)
==525==    by 0x4024B0: evaluate_hand (eval.c:401)
==525==    by 0x401BB9: compare_hands (eval.c:238)
==525==    by 0x402B38: main (test-eval.c:124)
==525== 
==525== Conditional jump or move depends on uninitialised value(s)
==525==    at 0x401A3E: build_hand_from_match (eval.c:217)
==525==    by 0x4024B0: evaluate_hand (eval.c:401)
==525==    by 0x401BB9: compare_hands (eval.c:238)
==525==    by 0x402B38: main (test-eval.c:124)
==525== 
==525== Use of uninitialised value of size 8
==525==    at 0x401A3A: build_hand_from_match (eval.c:217)
==525==    by 0x4024B0: evaluate_hand (eval.c:401)
==525==    by 0x402898: describe_hand (test-eval.c:68)
==525==    by 0x402AC3: main (test-eval.c:116)
==525== 
==525== Conditional jump or move depends on uninitialised value(s)
==525==    at 0x401A3E: build_hand_from_match (eval.c:217)
==525==    by 0x4024B0: evaluate_hand (eval.c:401)
==525==    by 0x402898: describe_hand (test-eval.c:68)
==525==    by 0x402AC3: main (test-eval.c:116)
==525== 
==525== Use of uninitialised value of size 8
==525==    at 0x401A3A: build_hand_from_match (eval.c:217)
==525==    by 0x4024B0: evaluate_hand (eval.c:401)
==525==    by 0x401B5E: compare_hands (eval.c:237)
==525==    by 0x402B38: main (test-eval.c:124)
==525== 
==525== Conditional jump or move depends on uninitialised value(s)
==525==    at 0x401A3E: build_hand_from_match (eval.c:217)
==525==    by 0x4024B0: evaluate_hand (eval.c:401)
==525==    by 0x401B5E: compare_hands (eval.c:237)
==525==    by 0x402B38: main (test-eval.c:124)
==525== 
==525== 
==525== HEAP SUMMARY:
==525==     in use at exit: 0 bytes in 0 blocks
==525==   total heap usage: 3,988 allocs, 3,988 frees, 80,704 bytes allocated
==525== 
==525== All heap blocks were freed -- no leaks are possible
==525== 
==525== For counts of detected and suppressed errors, rerun with: -v
==525== Use --track-origins=yes to see where uninitialised values come from
==525== ERROR SUMMARY: 64 errors from 8 contexts (suppressed: 0 from 0)

Overall Grade: C
