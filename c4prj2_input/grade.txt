Grading at Tue Apr 27 07:25:37 UTC 2021
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Line_1_did_not_match
Your file did not match the expected ouput
Test case failed
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==393== Memcheck, a memory error detector
==393== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==393== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==393== Command: ./tester i1 i2
==393== Parent PID: 392
==393== 
==393== Invalid free() / delete / delete[] / realloc()
==393==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==393==    by 0x400B45: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==393==    by 0x400D57: read_input (in /graderhome/work/c4prj2_input/tester)
==393==    by 0x401B31: main (test-input.c:69)
==393==  Address 0x5205690 is 0 bytes inside a block of size 2 free'd
==393==    at 0x4C2EDEB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==393==    by 0x400BE5: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==393==    by 0x400D57: read_input (in /graderhome/work/c4prj2_input/tester)
==393==    by 0x401B31: main (test-input.c:69)
==393==  Block was alloc'd at
==393==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==393==    by 0x400B93: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==393==    by 0x400D57: read_input (in /graderhome/work/c4prj2_input/tester)
==393==    by 0x401B31: main (test-input.c:69)
==393== 
==393== Invalid write of size 1
==393==    at 0x400B60: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==393==    by 0x400D57: read_input (in /graderhome/work/c4prj2_input/tester)
==393==    by 0x401B31: main (test-input.c:69)
==393==  Address 0x1 is not stack'd, malloc'd or (recently) free'd
==393== 
==393== 
==393== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==393==  Access not within mapped region at address 0x1
==393==    at 0x400B60: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==393==    by 0x400D57: read_input (in /graderhome/work/c4prj2_input/tester)
==393==    by 0x401B31: main (test-input.c:69)
==393==  If you believe this happened as a result of a stack
==393==  overflow in your program's main thread (unlikely but
==393==  possible), you can try to increase the size of the
==393==  main thread stack using the --main-stacksize= flag.
==393==  The main thread stack size used in this run was 8388608.
==393== 
==393== HEAP SUMMARY:
==393==     in use at exit: 784 bytes in 11 blocks
==393==   total heap usage: 18 allocs, 7 frees, 4,933 bytes allocated
==393== 
==393== LEAK SUMMARY:
==393==    definitely lost: 0 bytes in 0 blocks
==393==    indirectly lost: 0 bytes in 0 blocks
==393==      possibly lost: 0 bytes in 0 blocks
==393==    still reachable: 784 bytes in 11 blocks
==393==         suppressed: 0 bytes in 0 blocks
==393== Rerun with --leak-check=full to see details of leaked memory
==393== 
==393== For counts of detected and suppressed errors, rerun with: -v
==393== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: C
